# Largely based on mattkc's CI pipeline for his SI editor
# See: https://github.com/itsmattkc/SIEdit/blob/master/.github/workflows/ci.yml

name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".clang-format"
      - ".clang-tidy"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".clang-format"
      - ".clang-tidy"


jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Install all developer tools
      - name: Install Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: "5.15.2"
          cache: true

      # Build the app and library
      - name: Build
        shell: bash
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release .
          ninja WDBEditor

      - name: Deploy
        shell: bash
        run: |
          mkdir deploy
          cp WDBEditor.exe deploy
          cd deploy
          windeployqt WDBEditor.exe

      # Upload the complete application as an artifact (Release comes later)
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: WDBEditor.zip
          path:
            deploy

  compare:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore cached ISO
        id: cache-original-iso
        uses: actions/cache/restore@v3
        with:
          path: legoiso
          key: legoiso

      - name: Download LEGO Island ISO
        if: ${{ !steps.cache-original-iso.outputs.cache-hit }}
        shell: bash
        run: |
          python3 -m pip install "gdown"
          gdown "https://drive.google.com/uc?id=1sMowLMjjJ461ldejlWGLX_-tXhx_1lAJ&export=download"
          python3 -c "import zipfile; zipfile.ZipFile('LEGO Island [English v1.1].zip', 'r').extractall('legoiso')"

      - name: Cache original ISO
        if: ${{ !steps.cache-original-iso.outputs.cache-hit }}
        uses: actions/cache/save@v3
        with:
          path: legoiso
          key: legoiso

      - name: Extract ISO
        uses: edgarrc/action-7z@v1
        with:
          args: 7z x -o"LEGO Island" "legoiso/English, September.ISO"

      - name: Setup GCC
        uses: Dup4/actions-setup-gcc@v1

      # While Qt is not required for the build to succeed, CMake does require it to configure...
      - name: Install Qt
        uses: jurplel/install-qt-action@v3

      - name: Build
        shell: bash
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release .
          cmake --build . --target Reconstruct

      - name: Reconstruct
        shell: bash
        run: |
          test/Reconstruct "LEGO Island/DATA/disk/LEGO/data/WORLD.WDB" "WORLD-Reconstructed.WDB"

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Compare
        shell: bash
        run: |
          python3 "tools/compare.py" "LEGO Island/DATA/disk/LEGO/data/WORLD.WDB" "WORLD-Reconstructed.WDB" > reconstruction-report.txt

        # Upload the reconstruction report
      - name: Upload Reconstruction Report
        uses: actions/upload-artifact@v2.2.1
        with:
          name: reconstruction-report.txt
          path:
            reconstruction-report.txt
